name: Build-Deploy
on:
  push:
    branches:
      - '*'
      - '*/*'
  workflow_dispatch:
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/familie-ba-mottak:${{ github.sha }}
  IMAGE_UTEN_TAG: docker.pkg.github.com/navikt/familie-ba-mottak/familie-ba-mottak
jobs:
  deploy-to-dev:
    name: Bygg app/image, push til github, deploy til dev-fss
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Bygg med maven + sonar
        env:
          SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B --no-transfer-progress package verify sonar:sonar --settings .m2/maven-settings.xml --file pom.xml
      - name: Bygg Docker image
        run: |
          docker build -t ${IMAGE} -t ${IMAGE_UTEN_TAG}:latest .
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_DOCKER_PUSH_PACKAGE_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Push Docker image
        run: docker push $IMAGE
      - uses: navikt/github-app-token-generator@master
        id: get-token
        with:
          private-key: ${{ secrets.REPO_CLONER_PRIVATE_KEY }}
          app-id: ${{ secrets.REPO_CLONER_APP_ID }}
      - name: Checkout e2e tests
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        uses: actions/checkout@v2
        with:
          repository: navikt/familie-ba-e2e
          token: ${{ steps.get-token.outputs.token }}
          path: ba-e2e
      - name: Setter riktig ba-mottak versjon i e2e tester
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        run: sed -i 's/familie-ba-mottak:latest/familie-ba-mottak:'$GITHUB_SHA'/g' ba-e2e/e2e/docker-compose.yml
      - name: Start alle apper (e2e)
        env:
          MOTTAK_CLIENT_ID: ${{ secrets.MOTTAK_CLIENT_ID }}
          MOTTAK_FRONTEND_CLIENT_ID: ${{ secrets.MOTTAK_FRONTEND_CLIENT_ID }}
          MOTTAK_CLIENT_SECRET: ${{ secrets.MOTTAK_CLIENT_SECRET }}
          MOTTAK_BA_SAK_SCOPE: ${{ secrets.MOTTAK_BA_SAK_SCOPE }}
          MOTTAK_FAMILIE_INTEGRASJONER_SCOPE: ${{ secrets.MOTTAK_FAMILIE_INTEGRASJONER_SCOPE }}
          INTEGRASJONER_CLIENT_ID: ${{ secrets.INTEGRASJONER_CLIENT_ID }}
          INTEGRASJONER_CLIENT_SECRET: ${{ secrets.INTEGRASJONER_CLIENT_SECRET }}
          INTEGRASJONER_INFOTRYGD_KS_SCOPE: ${{ secrets.INTEGRASJONER_INFOTRYGD_KS_SCOPE }}
          INTEGRASJONER_AAD_GRAPH_SCOPE: ${{ secrets.INTEGRASJONER_AAD_GRAPH_SCOPE }}
          SAK_CLIENT_ID: ${{ secrets.SAK_CLIENT_ID }}
          SAK_FRONTEND_CLIENT_ID: ${{ secrets.SAK_FRONTEND_CLIENT_ID }}
          SAK_CLIENT_SECRET: ${{ secrets.SAK_CLIENT_SECRET}}
          INTEGRASJONER_SCOPE: ${{ secrets.INTEGRASJONER_SCOPE }}
          OPPDRAG_SCOPE: ${{ secrets.OPPDRAG_SCOPE }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          SAK_FRONTEND_CLIENT_SECRET: ${{ secrets.SAK_FRONTEND_CLIENT_SECRET }}
          BA_SAK_SCOPE: ${{ secrets.BA_SAK_SCOPE }}
          OPPDRAG_CLIENT_ID: ${{ secrets.OPPDRAG_CLIENT_ID }}
          SRVUSER_BA_SAK_SECRET: ${{ secrets.SRVUSER_BA_SAK_SECRET }}
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        run: cd ba-e2e/e2e; ./e2e.sh
      - name: Kj√∏r tester (e2e)
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: "!contains(github.event.head_commit.message, 'e2e skip')"
        run: cd ba-e2e/autotest; mvn --settings .m2/maven-settings.xml -Dtest="**" test
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: app-preprod.yaml
      - name: Push Docker image med 'latest' tag
        if: github.ref == 'refs/heads/master'
        run: docker push ${IMAGE_UTEN_TAG}:latest
      - name: Deploy til prod-fss
        if: github.ref == 'refs/heads/master'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: app-prod.yaml
